# Generated by Django 3.2.4 on 2021-06-10 13:46

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import model_utils.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Filmwork',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(db_index=True, max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, default='', verbose_name='description')),
                ('work_type', models.CharField(choices=[('movie', 'movie'), ('tv_series', 'TV series')], max_length=20, verbose_name='type')),
                ('file_path', models.FileField(blank=True, null=True, upload_to='film_works/', verbose_name='file')),
                ('content_rating', models.CharField(blank=True, choices=[('0+', '0+'), ('2+', '2+'), ('6+', '6+'), ('12+', '12+'), ('14+', '14+'), ('16+', '16+'), ('18+', '18+')], default='', max_length=20, verbose_name='content rating')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='release date')),
                ('imdb_rating', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='IMDB rating')),
                ('created', models.DateField(default=datetime.date.today, verbose_name='create date')),
            ],
            options={
                'verbose_name': 'filmwork',
                'verbose_name_plural': 'filmwork',
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=20, verbose_name='name')),
                ('description', models.TextField(blank=True, verbose_name='description')),
            ],
            options={
                'verbose_name': 'genre',
                'verbose_name_plural': 'genres',
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', model_utils.fields.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_index=True, default='', max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(db_index=True, default='', max_length=30, verbose_name='last_name')),
            ],
            options={
                'verbose_name': 'person',
                'verbose_name_plural': 'persons',
                'ordering': ('last_name', 'first_name'),
            },
        ),
        migrations.CreateModel(
            name='PersonFilmwork',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profession', models.CharField(choices=[('actor', 'actor'), ('director', 'director'), ('writer', 'writer')], max_length=20, verbose_name='profession')),
                ('filmwork', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.filmwork')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='movies.person')),
            ],
            options={
                'unique_together': {('filmwork', 'person', 'profession')},
            },
        ),
        migrations.AddField(
            model_name='person',
            name='filmworks',
            field=models.ManyToManyField(related_name='persons', through='movies.PersonFilmwork', to='movies.Filmwork'),
        ),
        migrations.AddField(
            model_name='filmwork',
            name='genres',
            field=models.ManyToManyField(to='movies.Genre', verbose_name='genres'),
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
            ],
            options={
                'verbose_name': 'movie',
                'verbose_name_plural': 'movies',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.filmwork',),
        ),
        migrations.CreateModel(
            name='TVSeries',
            fields=[
            ],
            options={
                'verbose_name': 'TV series',
                'verbose_name_plural': 'TV series',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('movies.filmwork',),
        ),
        migrations.CreateModel(
            name='Episode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='season')),
                ('number', models.PositiveSmallIntegerField(verbose_name='number')),
                ('title', models.CharField(blank=True, db_index=True, default='', max_length=255, verbose_name='title')),
                ('release_date', models.DateField(blank=True, null=True, verbose_name='release date')),
                ('tv_series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='episodes', to='movies.filmwork', verbose_name='TV series')),
            ],
            options={
                'verbose_name': 'episode',
                'verbose_name_plural': 'episode',
                'ordering': ('tv_series', 'season', 'number'),
                'unique_together': {('tv_series', 'season', 'number')},
            },
        ),
    ]
